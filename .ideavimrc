" Enable incremental search
set incsearch
set ignorecase     " Ignore case in search
set smartcase      " Enable case-sensitive search if uppercase is used

" Set scrolloff (keep 5 lines visible above/below cursor)
set scrolloff=5

" Enable line numbers similar to Neovim
set number
set relativenumber

" Enable clipboard support (mimicking Neovim's `clipboard=unnamedplus`)
set clipboard+=unnamedplus

" Enable syntax highlighting
set syntax=on

" Set tab settings to match Neovim
set expandtab       " Convert tabs to spaces
set shiftwidth=2    " Set indentation width to 2 spaces
set softtabstop=2   " Number of spaces per tab in insert mode
set tabstop=2       " Display tabs as 2 spaces

" Enable auto-indentation
set autoindent
set smartindent

" Highlight copied text
Plug 'machakann/vim-highlightedyank'

" Enable comments like Neovim's `vim-commentary`
Plug 'tpope/vim-commentary'

" Enable smooth scrolling similar to AstroNvim
map <C-d> <C-d>zz
map <C-u> <C-u>zz
map n nzzzv
map N Nzzzv

" Map `Q` to format selected code (like Neovim)
map Q gq

" Use space as leader key (like AstroNvim)
let mapleader=" "

" Open file search (similar to Telescope in AstroNvim)
map <leader>ff <Action>(FindInPath)

" Buffer navigation (like AstroNvim's `<Space>bb` and `<Space>bd`)
map <leader>bb <Action>(Switcher)
map <leader>bd <Action>(CloseContent)

" Toggle file explorer (like Neotree in AstroNvim)
map <leader>e <Action>(ActivateProjectView)

" Save and quit mappings
map <leader>w <Action>(SaveAll)
map <leader>q <Action>(CloseActiveTab)
map <leader>Q <Action>(CloseProject)

" Search functionality (similar to AstroNvim)
map <leader>fw <Action>(Find)
map <leader>fr <Action>(RecentFiles)

" Code formatting
map <leader>r <Action>(ReformatCode)

" Debugging (mimics AstroNvim's `<Space>d` mappings)
map <leader>db <Action>(ToggleLineBreakpoint)
map <leader>dt <Action>(ActivateDebugToolWindow)
map <leader>dc <Action>(Debug)
map <leader>dr <Action>(Resume)
map <leader>do <Action>(StepOver)
map <leader>di <Action>(StepInto)
map <leader>dO <Action>(StepOut)
map <leader>dq <Action>(Stop)

" Git mappings (similar to AstroNvim's `<Space>g` mappings)
map <leader>gs <Action>(Git.Status)
map <leader>gc <Action>(Git.Commit)
map <leader>gp <Action>(Git.Push)
map <leader>gl <Action>(Git.Log)

" Split navigation (similar to Neovim's `<C-h/j/k/l>`)
map <C-h> <Action>(SelectPreviousSplitter)
map <C-l> <Action>(SelectNextSplitter)
map <C-j> <Action>(SelectNextTab)
map <C-k> <Action>(SelectPreviousTab)

" Commenting (works like `gcc` in Neovim)
map <leader>/ <Action>(CommentByLineComment)

" Terminal toggling (similar to AstroNvim's `<Space>th`)
map <leader>th <Action>(ActivateTerminalToolWindow)
map <leader>th <Action>(ToggleTerminal)

:map ]f <Action>(MethodDown)
:map [f <Action>(MethodUp)

" Enable Vim plugins in IdeaVim
set ideavim_extensions=all
